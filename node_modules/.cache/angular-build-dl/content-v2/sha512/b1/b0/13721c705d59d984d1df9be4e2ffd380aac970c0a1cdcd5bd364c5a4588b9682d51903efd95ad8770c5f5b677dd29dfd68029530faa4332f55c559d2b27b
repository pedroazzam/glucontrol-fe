{"version":3,"sources":["./src/app/hello-world.service.ts","./src/app/hello-world/hello-world.component.ts","./src/app/hello-world/hello-world.component.html","./src/app/login/auth.service.ts","./src/environments/environment.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/menu/menu.component.ts","./src/app/menu/menu.component.html","./src/app/app.module.ts","./src/app/logout/logout.component.ts","./src/app/logout/logout.component.html","./src/app/app-routing.module.ts","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/app/http-interceptor.service.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;AACA;AAAA;AAAA;AAAA;AAA2C;;;AAOpC,MAAM,iBAAiB;IAC1B,YAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;IACpC,CAAC;IACD,wBAAwB;QACpB,OAAO,CAAC,GAAG,CAAC,6CAA6C,CAAC,CAAC;QAC3D,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAe,sDAAsD,CAAC,CAAC;IAC/F,CAAC;IAED,yBAAyB;QACrB,OAAO,CAAC,GAAG,CAAC,8CAA8C,CAAC,CAAC;QAC5D,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,yDAAyD,CAAC,CAAC;IACpF,CAAC;;kFAXQ,iBAAiB;oGAAjB,iBAAiB,WAAjB,iBAAiB,mBAFd,MAAM;6FAET,iBAAiB;cAH7B,wDAAU;eAAC;gBACR,UAAU,EAAE,MAAM;aACrB;;;;;;;;;;;;;;ACPD;AAAA;AAAA;AAAA;AAAA;AAAkD;;;;AAS3C,MAAM,mBAAmB;IAI9B,YACU,KAAqB,EACrB,MAAc,EACd,iBAAoC;QAFpC,UAAK,GAAL,KAAK,CAAgB;QACrB,WAAM,GAAN,MAAM,CAAQ;QACd,sBAAiB,GAAjB,iBAAiB,CAAmB;QAL9C,mBAAc,GAAG,EAAE,CAAC;IAMd,CAAC;IAEP,QAAQ;QACN,OAAO,CAAC,GAAG,CAAC,0CAA0C,CAAC,CAAC;QACxD,IAAI,CAAC,iBAAiB,CAAC,yBAAyB,EAAE,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE;YACjE,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QACnB,CAAC,CAAC,CAAC;QACH,OAAO,CAAC,GAAG,CAAC,uCAAuC,CAAC,CAAC;QAGrD,2DAA2D;QAC3D,yEAAyE;QACzE,uCAAuC;QACvC,0EAA0E;QAC1E,MAAM;IACR,CAAC;;sFAvBU,mBAAmB;mGAAnB,mBAAmB;QCThC,yEACI;QAAA,mFAAwB;QAAA,qEAAI;QAAA,uDAAuB;QAAA,4DAAK;QAC1D,4DAAM;;QADwB,0DAAuB;QAAvB,mFAAuB;;6FDQ1C,mBAAmB;cAL/B,uDAAS;eAAC;gBACT,QAAQ,EAAE,iBAAiB;gBAC3B,WAAW,EAAE,8BAA8B;gBAC3C,SAAS,EAAE,CAAC,6BAA6B,CAAC;aAC3C;;;;;;;;;;;;;;AEPD;AAAA;AAAA;AAAA;AAAA;AAA2C;AACN;;;AAK9B,MAAM,qBAAqB;IAQhC,YAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QANpC,oDAAoD;QACpD,qCAAgC,GAAG,mBAAmB;IAOtD,CAAC;IAED,qBAAqB,CAAC,QAAgB,EAAE,QAAgB;QACtD,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,uDAAuD,EAC1E,EAAE,OAAO,EAAE,EAAE,aAAa,EAAE,IAAI,CAAC,oBAAoB,CAAC,QAAQ,EAAE,QAAQ,CAAC,EAAE,EAAE,CAAC,CAAC,IAAI,CAAC,0DAAG,CAAC,CAAC,GAAG,EAAE,EAAE;YAC9F,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;YACzB,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;YACzB,IAAI,CAAC,uBAAuB,CAAC,QAAQ,EAAE,QAAQ,CAAC,CAAC;QACnD,CAAC,CAAC,CAAC,CAAC;IACR,CAAC;IAED,oBAAoB,CAAC,QAAgB,EAAE,QAAgB;QACrD,OAAO,QAAQ,GAAG,MAAM,CAAC,IAAI,CAAC,QAAQ,GAAG,GAAG,GAAG,QAAQ,CAAC;IAC1D,CAAC;IAED,uBAAuB,CAAC,QAAQ,EAAE,QAAQ;QACxC,cAAc,CAAC,OAAO,CAAC,IAAI,CAAC,gCAAgC,EAAE,QAAQ,CAAC;IACzE,CAAC;IAED,MAAM;QACJ,cAAc,CAAC,UAAU,CAAC,IAAI,CAAC,gCAAgC,CAAC,CAAC;QACjE,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;QACrB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;IACvB,CAAC;IAED,cAAc;QACZ,IAAI,IAAI,GAAG,cAAc,CAAC,OAAO,CAAC,IAAI,CAAC,gCAAgC,CAAC;QACxE,IAAI,IAAI,KAAK,IAAI;YAAE,OAAO,KAAK;QAC/B,OAAO,IAAI;IACb,CAAC;IAED,mBAAmB;QACjB,IAAI,IAAI,GAAG,cAAc,CAAC,OAAO,CAAC,IAAI,CAAC,gCAAgC,CAAC;QACxE,IAAI,IAAI,KAAK,IAAI;YAAE,OAAO,EAAE;QAC5B,OAAO,IAAI;IACb,CAAC;;0FA7CU,qBAAqB;wGAArB,qBAAqB,WAArB,qBAAqB,mBAFpB,MAAM;6FAEP,qBAAqB;cAHjC,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;ACND;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;ACfnE;AAAA;AAAA;AAAA;AAAA;AAA0C;;;;AAOnC,MAAM,YAAY;IALzB;QAME,UAAK,GAAG,OAAO,CAAC;KACjB;;wEAFY,YAAY;4FAAZ,YAAY;QCPzB,sEAAqB;QACrB,2EAA+B;;6FDMlB,YAAY;cALxB,uDAAS;eAAC;gBACT,QAAQ,EAAE,UAAU;gBACpB,WAAW,EAAE,sBAAsB;gBACnC,SAAS,EAAE,CAAC,qBAAqB,CAAC;aACnC;;;;;;;;;;;;;;AEND;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;;;;;;;;ICO9B,uEAAuG;IAAtB,4SAAqB;IAAC,qEAAU;IAAA,4DAAI;;;IAGrH,wEAA6F;IAAA,mEAAQ;IAAA,4DAAI;;;;IAIzG,wEAA0F;IAAnB,0SAAkB;IAAC,6DAAE;IAAA,4DAAI;;;;IAIhG,wEAA0F;IAAnB,2SAAkB;IAAC,mEAAQ;IAAA,4DAAI;;;;IAM1G,wEAA+G;IAAvB,iTAAsB;IAAC,iEAAM;IAAA,4DAAI;;ADdlI,MAAM,aAAa;IAKxB,YAAoB,KAAqB,EAC/B,MAAc,EACf,qBAA4C,EAC3C,iBAAoC;QAH1B,UAAK,GAAL,KAAK,CAAgB;QAC/B,WAAM,GAAN,MAAM,CAAQ;QACf,0BAAqB,GAArB,qBAAqB,CAAuB;QAC3C,sBAAiB,GAAjB,iBAAiB,CAAmB;QAN9C,eAAU,GAAG,KAAK,CAAC;QACnB,mBAAc,GAAG,EAAE,CAAC;IAMd,CAAC;IAEP,QAAQ;QACN,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,qBAAqB,CAAC,cAAc,EAAE,CAAC;QAC9D,OAAO,CAAC,GAAG,CAAC,SAAS,GAAG,IAAI,CAAC,UAAU,CAAC,CAAC;IAC3C,CAAC;IAED,YAAY;QACV,IAAI,CAAC,qBAAqB,CAAC,MAAM,EAAE,CAAC;IACtC,CAAC;IAED,QAAQ;QACN,yEAAyE;QACzE,uCAAuC;QACvC,MAAM;QAEN,OAAO,CAAC,GAAG,CAAC,gDAAgD,CAAC,CAAC;QAC9D,IAAI,CAAC,iBAAiB,CAAC,yBAAyB,EAAE,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE;YACjE,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QACnB,CAAC,CAAC,CAAC;QACH,OAAO,CAAC,GAAG,CAAC,6CAA6C,CAAC,CAAC;QAE3D,OAAO,CAAC,GAAG,CAAC,eAAe,CAAC;QAC5B,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC;QACvC,+CAA+C;IACjD,CAAC;IAED,QAAQ;QACN,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,qBAAqB,CAAC,mBAAmB,EAAE,CAAC,CAAC;IAChE,CAAC;;0EAtCU,aAAa;6FAAb,aAAa;QCV1B,yEACI;QAAA,yEACI;QAAA,sEAAK;QAAA,uEAAyD;QAAA,oFAAyB;QAAA,4DAAI;QAAA,4DAAM;QAE7F,wEACI;QAAA,wEACI;QACA,qGAAuG;QAC3G,4DAAK;QACL,wEACI;QAAA,qGAA6F;QACjG,4DAAK;QAEL,yEACI;QAAA,uGAA0F;QAC9F,4DAAK;QAEL,yEACI;QAAA,uGAA0F;QAC9F,4DAAK;QACT,4DAAK;QAEP,yEACE;QAAA,sEACI;QAAA,uGAA+G;QACnH,4DAAK;QACT,4DAAK;QACT,4DAAM;QACR,4DAAS;;QArBY,0DAA8C;QAA9C,4GAA8C;QAG9C,0DAA8C;QAA9C,4GAA8C;QAI9C,0DAA8C;QAA9C,4GAA8C;QAI9C,0DAA8C;QAA9C,4GAA8C;QAMlD,0DAA8C;QAA9C,4GAA8C;;6FDdpD,aAAa;cALzB,uDAAS;eAAC;gBACT,QAAQ,EAAE,UAAU;gBACpB,WAAW,EAAE,uBAAuB;gBACpC,SAAS,EAAE,CAAC,sBAAsB,CAAC;aACpC;;;;;;;;;;;;;;AETD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0D;AACjB;AACI;AAEW;AACT;AAC2B;AACpB;AACqB;AAElB;AACG;AACQ;;AAyB7D,MAAM,SAAS;;wFAAT,SAAS,cAFR,2DAAY;4IAEb,SAAS,mBATT;QACT;YACE,OAAO,EAAE,sEAAiB;YAC1B,QAAQ,EAAE,iFAAsB;YAChC,KAAK,EAAE,IAAI;SACZ;KACF,YAZQ;YACP,uEAAa;YACb,oEAAgB;YAChB,qEAAgB;YAChB,0DAAW;SACZ;mIAUU,SAAS,mBArBlB,2DAAY;QACZ,sFAAmB;QACnB,kEAAa;QACb,qEAAc;QACd,wEAAe,aAGf,uEAAa;QACb,oEAAgB;QAChB,qEAAgB;QAChB,0DAAW;6FAWF,SAAS;cAvBrB,sDAAQ;eAAC;gBACR,YAAY,EAAE;oBACZ,2DAAY;oBACZ,sFAAmB;oBACnB,kEAAa;oBACb,qEAAc;oBACd,wEAAe;iBAChB;gBACD,OAAO,EAAE;oBACP,uEAAa;oBACb,oEAAgB;oBAChB,qEAAgB;oBAChB,0DAAW;iBACZ;gBACD,SAAS,EAAE;oBACT;wBACE,OAAO,EAAE,sEAAiB;wBAC1B,QAAQ,EAAE,iFAAsB;wBAChC,KAAK,EAAE,IAAI;qBACZ;iBACF;gBACD,SAAS,EAAE,CAAC,2DAAY,CAAC;aAC1B;;;;;;;;;;;;;;ACpCD;AAAA;AAAA;AAAkD;;AAO3C,MAAM,eAAe;IAE1B,gBAAgB,CAAC;IAEjB,QAAQ;IACR,CAAC;;8EALU,eAAe;+FAAf,eAAe;QCP5B,oEAAG;QAAA,wEAAa;QAAA,4DAAI;;6FDOP,eAAe;cAL3B,uDAAS;eAAC;gBACT,QAAQ,EAAE,YAAY;gBACtB,WAAW,EAAE,yBAAyB;gBACtC,SAAS,EAAE,CAAC,wBAAwB,CAAC;aACtC;;;;;;;;;;;;;;AEND;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyC;AACc;AACmB;AACjB;AACG;;;AAE5D,MAAM,MAAM,GAAW;IACrB,EAAC,IAAI,EAAE,OAAO,EAAE,SAAS,EAAE,qEAAc,EAAC;IAC1C,EAAC,IAAI,EAAE,EAAE,EAAE,SAAS,EAAE,qEAAc,EAAC;IACrC,EAAC,IAAI,EAAE,aAAa,EAAE,SAAS,EAAE,sFAAmB,EAAC;IACrD,EAAC,IAAI,EAAE,QAAQ,EAAE,SAAS,EAAE,wEAAe,EAAC;CAC7C,CAAC;AAMK,MAAM,gBAAgB;;+FAAhB,gBAAgB;0JAAhB,gBAAgB,kBAHlB,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,EAC7B,4DAAY;mIAEX,gBAAgB,uFAFjB,4DAAY;6FAEX,gBAAgB;cAJ5B,sDAAQ;eAAC;gBACR,OAAO,EAAE,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;gBACvC,OAAO,EAAE,CAAC,4DAAY,CAAC;aACxB;;;;;;;;;;;;;;AChBD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;;;;;;;ICK1C,0EAAsD;IAAA,uDAAgB;IAAA,4DAAM;;;IAAtB,0DAAgB;IAAhB,oFAAgB;;;IACtE,0EAAsD;IAAA,uDAAkB;IAAA,4DAAM;;;IAAxB,0DAAkB;IAAlB,sFAAkB;;ADGzE,MAAM,cAAc;IASzB,YACU,KAAqB,EACrB,MAAc,EACd,qBAA4C;QAF5C,UAAK,GAAL,KAAK,CAAgB;QACrB,WAAM,GAAN,MAAM,CAAQ;QACd,0BAAqB,GAArB,qBAAqB,CAAuB;QARtD,iBAAY,GAAG,qBAAqB,CAAC;QAErC,iBAAY,GAAG,KAAK,CAAC;QACrB,iBAAY,GAAG,KAAK,CAAC;IAKuC,CAAC;IAE7D,QAAQ;IACR,CAAC;IAED,WAAW;QACT,IAAI,CAAC,qBAAqB,CAAC,qBAAqB,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC,SAAS,CAAC,CAAC,MAAM,EAAC,EAAE;YACjG,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;YAC1B,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;YACzB,IAAI,CAAC,cAAc,GAAG,mBAAmB,CAAC;YAC1C,0CAA0C;QAC5C,CAAC,EAAE,GAAG,EAAE;YACN,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;YACzB,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;QAC5B,CAAC,CAAC,CAAC;IACL,CAAC;;4EA3BU,cAAc;8FAAd,cAAc;QCT3B,yEACE;QAAA,wEAAwB;QAAA,gEAAK;QAAA,4DAAK;QAClC,yEACE;QAAA,yEACE;QAAA,0EACE;QAAA,0GAAsD;QACtD,0GAAsD;QACtD,yEACE;QAAA,2EAAmB;QAAA,uEAAW;QAAA,4DAAQ;QACtC,4EAEF;QAFwD,qLAAsB;QAA5E,4DAEF;QAAA,4DAAM;QACN,0EACE;QAAA,4EAAiB;QAAA,qEAAS;QAAA,4DAAQ;QAClC,6EAEF;QAF8C,qLAAsB;QAAlE,4DAEF;QAAA,4DAAM;QACN,8EAAsD;QAA9C,uIAAQ,iBAAa;QAAyB,iEAAK;QAAA,4DAAS;QACtE,4DAAO;QACT,4DAAM;QACR,4DAAM;QACR,4DAAM;;QAhBmC,0DAAoB;QAApB,kFAAoB;QACpB,0DAAoB;QAApB,kFAAoB;QAGG,0DAAsB;QAAtB,iFAAsB;QAKhC,0DAAsB;QAAtB,iFAAsB;;6FDL/D,cAAc;cAL1B,uDAAS;eAAC;gBACT,QAAQ,EAAE,WAAW;gBACrB,WAAW,EAAE,wBAAwB;gBACrC,SAAS,EAAE,CAAC,uBAAuB,CAAC;aACrC;;;;;;;;;;;;;;AERD;AAAA;AAAA;AAAA;AAAA;AAAyG;AAC9D;;;AAKpC,MAAM,sBAAsB;IAE/B,YAAoB,qBAA4C;QAA5C,0BAAqB,GAArB,qBAAqB,CAAuB;IAAI,CAAC;IAErE,SAAS,CAAC,GAAqB,EAAE,IAAiB;QAC9C,IAAI,IAAI,CAAC,qBAAqB,CAAC,cAAc,EAAE,IAAI,GAAG,CAAC,GAAG,CAAC,OAAO,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC,EAAE;YACpF,MAAM,OAAO,GAAG,GAAG,CAAC,KAAK,CAAC;gBACtB,OAAO,EAAE,IAAI,gEAAW,CAAC;oBACrB,cAAc,EAAE,kBAAkB;oBAClC,eAAe,EAAE,SAAS,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,qBAAqB,CAAC,QAAQ,GAAG,GAAG,GAAG,IAAI,CAAC,qBAAqB,CAAC,QAAQ,CAAC,EAAE;iBAC3H,CAAC;aACL,CAAC,CAAC;YACH,OAAO,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;SAC/B;aAAM;YACH,OAAO,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;SAC3B;IACL,CAAC;;4FAhBQ,sBAAsB;yGAAtB,sBAAsB,WAAtB,sBAAsB;6FAAtB,sBAAsB;cADlC,wDAAU;;;;;;;;;;;;;;ACLX;AAAA;AAAA;AAAA;AAAA;AAA+C;AAIU;;;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,2EAAwB,gBAAgB,CAAC,0DAAU;KAChD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;;;;;;;;;;;;ACXpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,qC","file":"main-es2015.js","sourcesContent":["import { HttpClient, HttpHeaderResponse } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { MessageModel } from './message';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class HelloWorldService {\n    constructor(private http: HttpClient) {\n    }\n    executeHelloWorldService() {\n        console.log('Passou aqui executeHelloWorldService inicio');\n        return this.http.get<MessageModel>('http://glucontrol.pedroazzam.me:8080/api/v1/greeting');\n    }\n\n    executeHelloWorldService2() {\n        console.log('Passou aqui executeHelloWorldService2 inicio');\n        return this.http.get('http://glucontrol.pedroazzam.me:8080/api/admin/user/all');\n    }\n    \n}","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { HelloWorldService } from '../hello-world.service';\n\n@Component({\n  selector: 'app-hello-world',\n  templateUrl: './hello-world.component.html',\n  styleUrls: ['./hello-world.component.css']\n})\nexport class HelloWorldComponent implements OnInit {\n\n  welcomeMessage = '';\n\n  constructor(\n    private route: ActivatedRoute,\n    private router: Router, \n    private helloWorldService: HelloWorldService,\n    ) { }\n\n  ngOnInit() {\n    console.log('passou aqui hello-world.component inicio');\n    this.helloWorldService.executeHelloWorldService2().subscribe(res => {\n      console.log(res);\n    });\n    console.log('passou aqui hello-world.component fim');\n\n\n    // console.log('passou aqui hello-world.component inicio');\n    // this.helloWorldService.executeHelloWorldService().subscribe((res) => {\n    //   this.welcomeMessage = res.content;\n    //   console.log('passou aqui hello-world.component fim: ' + res.content);\n    // });\n  }\n\n\n}","<div class=\"container\">\n    Message from server ->  <h1>{{this.welcomeMessage}}</h1>\n  </div>","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthenticationService {\n\n  // BASE_PATH: 'http://glucontrol.pedroazzam.me:8080'\n  USER_NAME_SESSION_ATTRIBUTE_NAME = 'authenticatedUser'\n\n  public username: String;\n  public password: String;\n\n  constructor(private http: HttpClient) {\n\n  }\n\n  authenticationService(username: String, password: String) {\n    return this.http.get('http://glucontrol.pedroazzam.me:8080/api/v1/basicauth',\n      { headers: { authorization: this.createBasicAuthToken(username, password) } }).pipe(map((res) => {\n        this.username = username;\n        this.password = password;\n        this.registerSuccessfulLogin(username, password);\n      }));\n  }\n\n  createBasicAuthToken(username: String, password: String) {\n    return 'Basic ' + window.btoa(username + \":\" + password)\n  }\n\n  registerSuccessfulLogin(username, password) {\n    sessionStorage.setItem(this.USER_NAME_SESSION_ATTRIBUTE_NAME, username)\n  }\n\n  logout() {\n    sessionStorage.removeItem(this.USER_NAME_SESSION_ATTRIBUTE_NAME);\n    this.username = null;\n    this.password = null;\n  }\n\n  isUserLoggedIn() {\n    let user = sessionStorage.getItem(this.USER_NAME_SESSION_ATTRIBUTE_NAME)\n    if (user === null) return false\n    return true\n  }\n\n  getLoggedInUserName() {\n    let user = sessionStorage.getItem(this.USER_NAME_SESSION_ATTRIBUTE_NAME)\n    if (user === null) return ''\n    return user\n  }\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'gc-fe';\n}\n","<app-menu></app-menu>\n<router-outlet></router-outlet>","import { Component, OnInit } from '@angular/core';\nimport { AuthenticationService } from '../login/auth.service';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { HelloWorldService } from '../hello-world.service';\n\n@Component({\n  selector: 'app-menu',\n  templateUrl: './menu.component.html',\n  styleUrls: ['./menu.component.css']\n})\nexport class MenuComponent implements OnInit {\n\n  isLoggedIn = false;\n  welcomeMessage = '';\n\n  constructor(private route: ActivatedRoute,\n    private router: Router,\n    public authenticationService: AuthenticationService,\n    private helloWorldService: HelloWorldService\n    ) { }\n\n  ngOnInit() {\n    this.isLoggedIn = this.authenticationService.isUserLoggedIn();\n    console.log('menu ->' + this.isLoggedIn);\n  }\n\n  handleLogout() {\n    this.authenticationService.logout();\n  }\n\n  handleHW(){\n    // this.helloWorldService.executeHelloWorldService().subscribe((res) => {\n    //   this.welcomeMessage = res.content;\n    // });\n\n    console.log('passou aqui teste hello-world.component inicio');\n    this.helloWorldService.executeHelloWorldService2().subscribe(res => {\n      console.log(res);\n    });\n    console.log('passou aqui teste hello-world.component fim');\n\n    console.log('Passo aqui HW')\n    this.router.navigate(['/hello-world']);\n    // this.helloWorldComponent.handleHelloWorld();\n  }\n\n  handleUN(){\n    console.log(this.authenticationService.getLoggedInUserName());\n  }\n\n}","<header>\n    <nav class=\"navbar navbar-expand-md navbar-dark bg-dark\">\n        <div><a href=\"https://www.pedroazzam.me\" class=\"navbar-brand\">Pedro Azzam - Glu Control</a></div>\n        \n            <ul class=\"text-center list-inline py-3\">\n                <li class=\"list-inline-item\">\n                    <!--<a *ngIf=\"isLoggedIn\" routerLink=\"/users\" class=\"btn btn-info\">List Users</a>-->\n                    <a *ngIf=\"authenticationService.isUserLoggedIn()\" class=\"nav-link\" href=\"/users\" (click)=handleUsers()>List Users</a>\n                </li>\n                <li class=\"list-inline-item\">\n                    <a *ngIf=\"authenticationService.isUserLoggedIn()\" routerLink=\"/adduser\" class=\"btn btn-info\">Add User</a>\n                </li>\n\n                <li class=\"list-inline-item\">\n                    <a *ngIf=\"authenticationService.isUserLoggedIn()\" class=\"btn btn-info\" (click)=handleHW()>HW</a>\n                </li>\n\n                <li class=\"list-inline-item\">\n                    <a *ngIf=\"authenticationService.isUserLoggedIn()\" class=\"btn btn-info\" (click)=handleUN()>userName</a>\n                </li>\n            </ul>\n        \n          <ul class=\"navbar-nav navbar-collapse justify-content-end\">\n            <li>\n                <a *ngIf=\"authenticationService.isUserLoggedIn()\" class=\"nav-link\" routerLink=\"/logout\" (click)=handleLogout()>Logout</a>\n            </li>\n        </ul>\n    </nav>\n  </header>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms'; \n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HelloWorldComponent } from './hello-world/hello-world.component';\nimport { MenuComponent } from './menu/menu.component';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { HelloWorldService } from './hello-world.service';\nimport { LoginComponent } from './login/login.component';\nimport { LogoutComponent } from './logout/logout.component';\nimport { HttpInterceptorService } from './http-interceptor.service';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HelloWorldComponent,\n    MenuComponent,\n    LoginComponent,\n    LogoutComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    FormsModule\n  ],\n  providers: [\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: HttpInterceptorService,\n      multi: true\n    }\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-logout',\n  templateUrl: './logout.component.html',\n  styleUrls: ['./logout.component.css']\n})\nexport class LogoutComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>logout works!</p>\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { HelloWorldComponent } from './hello-world/hello-world.component';\nimport { LoginComponent } from './login/login.component';\nimport { LogoutComponent } from './logout/logout.component';\n\nconst routes: Routes = [\n  {path: 'login', component: LoginComponent},\n  {path: '', component: LoginComponent},\n  {path: 'hello-world', component: HelloWorldComponent},\n  {path: 'logout', component: LogoutComponent},\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { AuthenticationService } from './auth.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  username: string;\n  password : string;\n  errorMessage = 'Invalid Credentials';\n  successMessage: string;\n  invalidLogin = false;\n  loginSuccess = false;\n\n  constructor(\n    private route: ActivatedRoute,\n    private router: Router,\n    private authenticationService: AuthenticationService) {   }\n\n  ngOnInit() {\n  }\n\n  handleLogin() {\n    this.authenticationService.authenticationService(this.username, this.password).subscribe((result)=> {\n      this.invalidLogin = false;\n      this.loginSuccess = true;\n      this.successMessage = 'Login Successful.';\n      // this.router.navigate(['/hello-world']);\n    }, () => {\n      this.invalidLogin = true;\n      this.loginSuccess = false;\n    });      \n  }\n}","<div class=\"container col-lg-6\">\n  <h1 class=\"text-center\">Login</h1>\n  <div class=\"card\">\n    <div class=\"card-body\">\n      <form class=\"form-group\">\n        <div class=\"alert alert-warning\" *ngIf='invalidLogin'>{{errorMessage}}</div>\n        <div class=\"alert alert-success\" *ngIf='loginSuccess'>{{successMessage}}</div>\n        <div class=\"form-group\">\n          <label for=\"email\">User Name :</label>\n          <input type=\"text\" class=\"form-control\" id=\"username\" [(ngModel)]=\"username\" placeholder=\"Enter User Name\"\n            name=\"username\">\n        </div>\n        <div class=\"form-group\">\n          <label for=\"pwd\">Password:</label>\n          <input type=\"password\" class=\"form-control\" [(ngModel)]=\"password\" id=\"password\" placeholder=\"Enter password\"\n            name=\"password\">\n        </div>\n        <button (click)=handleLogin() class=\"btn btn-success\">Login</button>\n      </form>\n    </div>\n  </div>\n</div>","import { HttpInterceptor, HttpRequest, HttpHandler, HttpEvent, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { AuthenticationService } from './login/auth.service';\n\n@Injectable()\nexport class HttpInterceptorService implements HttpInterceptor {\n\n    constructor(private authenticationService: AuthenticationService) { }\n\n    intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n        if (this.authenticationService.isUserLoggedIn() && req.url.indexOf('basicauth') === -1) {\n            const authReq = req.clone({\n                headers: new HttpHeaders({\n                    'Content-Type': 'application/json',\n                    'Authorization': `Basic ${window.btoa(this.authenticationService.username + \":\" + this.authenticationService.password)}`\n                })\n            });\n            return next.handle(authReq);\n        } else {\n            return next.handle(req);\n        }\n    }\n}","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}